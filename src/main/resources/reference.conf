spray.can.server.request-chunk-aggregation-limit = 1m
spray.can.client.response-chunk-aggregation-limit = 0
spray.can.server.chunkless-streaming = off
#Currently, fetcher-proxy dose not send its responses in the same order that the requests were received if pipelining is enabled.
#So disable it.
spray.can.server.pipelining-limit = 1

#for spray-v1.3.3, 
#The timer for checking request timeouts (if configured to non-zero) will stop running as soon as the initial ChunkedResponseStart message has been received, 
#i.e. there is currently no timeout checking for and in between individual response chunks.
#so the following timeouts should be set.  
#for more inforamtion, see 
#1. http://spray.io/documentation/1.2.3/spray-can/http-client/
#2. http://spray.io/documentation/1.2.3/spray-can/configuration/
spray.can.server.request-timeout = 30s
spray.can.server.idle-timeout = 60s
spray.can.client.request-timeout = 30s

spray.can {
	host-connector {
		max-redirects = 32
		max-connections = 32
		max-retries = 1
		pipelining = off
	}
	server.parsing {
		incoming-auto-chunking-threshold-size = infinite
		illegal-header-warnings = off
	}
	client.parsing {
		incoming-auto-chunking-threshold-size = 512k
	}
}

#akka.jvm-exit-on-fatal-error=off

akka.log-config-on-start=off
akka.log-dead-letters=on
akka.log-dead-letters-during-shutdown=on
akka {
	loglevel = "DEBUG"
		actor.debug {
		receive = on //will log all messages sent to an actor if that actors receive method is a LoggingReceive
		autoreceive = on //will log all special messages like Kill, PoisonPill e.t.c. sent to all actors
		lifecycle = off //will log all actor lifecycle events of all actors
		unhandled = on
	}
}

akka.actor.guardian-supervisor-strategy=akka.actor.StoppingSupervisorStrategy

fetcher-proxy {
	interface = "0.0.0.0"
	port = "8787"
	wait_for_x_seconds_when_stop = 9
}